"use strict";(()=>{var e={};e.id=266,e.ids=[266],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3733:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var r={};n.r(r),n.d(r,{POST:()=>u});var a=n(9303),o=n(8716),s=n(670),i=n(7070),d=n(8990);async function u(e){try{let{username:t,password:n}=await e.json();if(!t||!n)return i.NextResponse.json({error:"Username and password are required"},{status:400});let r=(0,d.v9)(t,n);if(!r)return i.NextResponse.json({error:"Invalid credentials"},{status:401});let{password:a,...o}=r;return i.NextResponse.json({success:!0,admin:o,message:"Login successful"})}catch(e){return console.error("Error authenticating admin:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/auth/route",pathname:"/api/admin/auth",filename:"route",bundlePath:"app/api/admin/auth/route"},resolvedPagePath:"/Users/cesararteaga/rami/src/app/api/admin/auth/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:m}=p,g="/api/admin/auth/route";function h(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},8990:(e,t,n)=>{n.d(t,{$U:()=>s,LW:()=>d,Pc:()=>o,sO:()=>i,v9:()=>u});let r=[],a=[{id:"1",username:"rami",password:"rami123",name:"Rami",role:"admin",createdAt:new Date().toISOString()}],o=e=>{console.log("Creating appointment with data:",e);let t={...e,id:Date.now().toString(),status:"pending",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return r.push(t),console.log(`Appointment created with ID: ${t.id}. Total appointments: ${r.length}`),t},s=()=>{console.log(`Getting all appointments. Current count: ${r.length}`);let e=r.sort((e,t)=>new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime());return console.log("Returning sorted appointments:",e),e},i=e=>r.find(t=>t.id===e),d=(e,t)=>{console.log(`Updating appointment ${e} to status: ${t}`);let n=r.find(t=>t.id===e);if(n){let r=n.status;return n.status=t,n.updatedAt=new Date().toISOString(),console.log(`Appointment ${e} status changed from ${r} to ${t}`),console.log("Updated appointment:",n),console.log("Server side update - localStorage will be updated on client side"),n}return console.error(`Appointment with ID ${e} not found`),null},u=(e,t)=>a.find(n=>n.username===e&&n.password===t)||null}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[92,972],()=>n(3733));module.exports=r})();