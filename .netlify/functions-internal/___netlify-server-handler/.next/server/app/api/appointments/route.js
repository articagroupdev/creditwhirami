"use strict";(()=>{var e={};e.id=282,e.ids=[282],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2782:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var r={};n.r(r),n.d(r,{GET:()=>d,POST:()=>p});var s=n(9303),o=n(8716),i=n(670),a=n(7070),l=n(8990);async function p(e){try{let t=await e.json();for(let e of(console.log("API received appointment data:",t),console.log("Validating required fields..."),["name","email","phone","businessName","businessType","monthlyRevenue","creditCards","establishedBusiness","strongCreditScore","cleanHistory","preferredDate","preferredTime","timezone","isEligible","eligibilityReason"]))if(!t[e])return console.error(`Missing required field: ${e}`),a.NextResponse.json({error:`Missing required field: ${e}`},{status:400});console.log("All required fields present"),console.log("Creating appointment with data:",{name:t.name,email:t.email,phone:t.phone,businessName:t.businessName,businessType:t.businessType,monthlyRevenue:t.monthlyRevenue,creditCards:t.creditCards,establishedBusiness:t.establishedBusiness,strongCreditScore:t.strongCreditScore,cleanHistory:t.cleanHistory,preferredDate:t.preferredDate,preferredTime:t.preferredTime,timezone:t.timezone,message:t.message||"",urgency:t.urgency||"",fundingAmount:t.fundingAmount||"",isEligible:t.isEligible,eligibilityReason:t.eligibilityReason});let n=(0,l.Pc)({name:t.name,email:t.email,phone:t.phone,businessName:t.businessName,businessType:t.businessType,monthlyRevenue:t.monthlyRevenue,creditCards:t.creditCards,establishedBusiness:t.establishedBusiness,strongCreditScore:t.strongCreditScore,cleanHistory:t.cleanHistory,preferredDate:t.preferredDate,preferredTime:t.preferredTime,timezone:t.timezone,message:t.message||"",urgency:t.urgency||"",fundingAmount:t.fundingAmount||"",isEligible:t.isEligible,eligibilityReason:t.eligibilityReason});return console.log("Appointment created successfully:",n),a.NextResponse.json({success:!0,appointment:n,message:"Appointment created successfully"})}catch(e){return console.error("Error creating appointment:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}async function d(e){try{let{searchParams:t}=new URL(e.url),n=t.get("date"),r=t.get("startDate"),s=t.get("endDate");console.log("API GET request - fetching appointments");let o=(0,l.$U)();return console.log(`Found ${o.length} appointments`),n&&(o=o.filter(e=>e.preferredDate===n),console.log(`Filtered by date ${n}: ${o.length} appointments`)),r&&s&&(o=o.filter(e=>{let t=new Date(e.preferredDate),n=new Date(r),o=new Date(s);return t>=n&&t<=o}),console.log(`Filtered by date range ${r} to ${s}: ${o.length} appointments`)),console.log("Returning appointments:",o),a.NextResponse.json({success:!0,appointments:o})}catch(e){return console.error("Error fetching appointments:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/appointments/route",pathname:"/api/appointments",filename:"route",bundlePath:"app/api/appointments/route"},resolvedPagePath:"/Users/cesararteaga/rami/src/app/api/appointments/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:c,staticGenerationAsyncStorage:g,serverHooks:m}=u,f="/api/appointments/route";function h(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}},8990:(e,t,n)=>{n.d(t,{$U:()=>i,LW:()=>l,Pc:()=>o,sO:()=>a,v9:()=>p});let r=[],s=[{id:"1",username:"rami",password:"rami123",name:"Rami",role:"admin",createdAt:new Date().toISOString()}],o=e=>{console.log("Creating appointment with data:",e);let t={...e,id:Date.now().toString(),status:"pending",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return r.push(t),console.log(`Appointment created with ID: ${t.id}. Total appointments: ${r.length}`),t},i=()=>{console.log(`Getting all appointments. Current count: ${r.length}`);let e=r.sort((e,t)=>new Date(t.createdAt).getTime()-new Date(e.createdAt).getTime());return console.log("Returning sorted appointments:",e),e},a=e=>r.find(t=>t.id===e),l=(e,t)=>{console.log(`Updating appointment ${e} to status: ${t}`);let n=r.find(t=>t.id===e);if(n){let r=n.status;return n.status=t,n.updatedAt=new Date().toISOString(),console.log(`Appointment ${e} status changed from ${r} to ${t}`),console.log("Updated appointment:",n),console.log("Server side update - localStorage will be updated on client side"),n}return console.error(`Appointment with ID ${e} not found`),null},p=(e,t)=>s.find(n=>n.username===e&&n.password===t)||null}};var t=require("../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[92,972],()=>n(2782));module.exports=r})();